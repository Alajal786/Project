package com.sutherland.library.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Transient;

@Entity
public class Login {

    @Id
    @Column(length = 70, nullable = false, unique = true)
    private String username;

    @Column(length = 80, nullable = false)
    private String password;

    @Transient // Role is not persisted in the database
    private Role role;

    // Constructors
    public Login() {}

    public Login(String username, String password, Role role) {
        this.username = username;
        this.password = password;
        this.role = role;
    }

    // Getters and Setters
    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public Role getRole() {
        return role;
    }

    public void setRole(Role role) {
        this.role = role;
    }

    // Optional: toString for debugging
    @Override
    public String toString() {
        return "Login [username=" + username + ", role=" + (role != null ? role.getRoleName() : "None") + "]";
    }

    // Inner Role class
    public static class Role {
        private String roleName;

        public Role(String roleName) {
            this.roleName = roleName;
        }

        public String getRoleName() {
            return roleName;
        }

        public void setRoleName(String roleName) {
            this.roleName = roleName;
        }

        // Simulate adding a user
        public void addUser(String username) {
            System.out.println("User '" + username + "' added by role: " + roleName);
        }

        // Validate login credentials
        public boolean loginValidate(String username, String password, Login login) {
            return login.getUsername().equals(username) && login.getPassword().equals(password);
        }
    }
}